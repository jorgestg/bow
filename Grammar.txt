compilation-unit = mod-clause? use-clause* item+
mod-declaration = 'mod' name NL
use-clause = 'use' name NL

name = ID | qualified-name
qualified-name = ID ('.' ID)+

type-reference = name | keyword-type-reference | pointer-type-reference
keyword-type-reference = 'f32' | 'f64' | 'never' | 's8' | 's16' | 's32' | 's64' | 'u8' | 'u16' | 'u32' | 'u64' | 'unit'
pointer-type-reference = '*' type-reference

item-access-modifier = 'pub' | 'mod'
member-access-modifier = 'pub' | 'file' | 'mod'

item = struct-definition | enum-definition | function-definition

struct-definition = item-access-modifier struct-keyword ID '{' field-declarations? '}'
struct-keyword = 'struct' | 'data'
field-declarations = NL field-declaration (NL field-declaration)* NL
field-declaration = member-access-modifier? 'mut'? ID type-reference

enum-definition = item-access-modifier 'enum' ID '{' enum-case-declarations '}'
enum-case-declarations = NL enum-case-declaration (NL enum-case-declaration)* NL
enum-case-declaration = ID ('(' type-reference ')')?

function-definition = 'fun' ID '(' parameter-declarations? ')' type-reference? block
parameter-declarations = parameter-declaration ((',' parameter-declaration)+ ','?)? 
parameter-declaration = 'mut'? (ID type-reference | '*'? 'self')
block = '{' '}'

NL = '\n'
STRING = '"' .* '"'
ID = [a-zA-Z_][a-zA-Z_0-9]*